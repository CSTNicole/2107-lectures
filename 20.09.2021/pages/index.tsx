import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

export default function Home(props) {
    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div>
              <p>Hello { props.name }</p>
            </div>
        </div>
    );
};

interface User {
    /** id of user */
    id: number;
    /** name of the user */
    name: string;
    // can take on the role of many
    username: string | undefined | null;
    email: string;
    address: {
        street: string;
        suite: string;
        city: string;
        zipcode: string;
        geo: {
            lat: string;
            lng: string;
        }
    },
    phone: string;
    // website: string;
    company: {
        name: string;
        catchPhrase: string;
        bs: string;
    }
};

function getData() {
    return fetch('https://jsonplaceholder.typicode.com/users')
        .then(
            (response) => {
                return response.json();
            }
        ).then(
            (data) => {
                console.log('data', data);

                return data as User[];
            }
        ).catch(
            (error) => {
                console.log('there is an error', error);
                return Promise.reject(error);
            }
        );
}

function callbackExample(f: (string) => void) {
    setTimeout(
        () => {
            console.log('executing callback');
            f('Yoonseo')
        },
        5000
    );
}

export async function getStaticProps(context) {
    callbackExample(
        (data) => {
            console.log('data is', data);
        }
    );

    // const response = await fetch('https://jsonplaceholder.typicode.com/users');
    // const data = await response.json();
    // const data = await response.json() as User[];

    // fetch('https://jsonplaceholder.typicode.com/users')
    //     .then(
    //         (response) => {
    //             response.json().then(
    //                 (data) => {
    //                     console.log('data', data);
    //                 }
    //             )
    //         }
    //     );
    // fetch('https://jsonplaceholder.typicode.com/users')
    //     .then(
    //         (response) => {
    //             return response.json();
    //         }
    //     ).then(
    //         (data) => {
    //             console.log('data', data);
    //         }
    //     )

    try {
        const data = await getData();
        const user = data[0];

        // const name = user.name;
        // const username = user.username;

        const { name = 'Peter', username } = user;

        console.log(JSON.stringify(data));
        return {
            // will be passed to the page component as props
            props: {
                name
            }
        }
    } catch(error) {
        return {
            // will be passed to the page component as props
            props: {
                name: 'Peter'
            }
        }
    }
};
